// Code generated by MockGen. DO NOT EDIT.
// Source: golang/service (interfaces: TLService)

// Package Service is a generated GoMock package.
package Service

import (
	dto "golang/dto"
	errs "golang/errs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTLService is a mock of TLService interface.
type MockTLService struct {
	ctrl     *gomock.Controller
	recorder *MockTLServiceMockRecorder
}

// MockTLServiceMockRecorder is the mock recorder for MockTLService.
type MockTLServiceMockRecorder struct {
	mock *MockTLService
}

// NewMockTLService creates a new mock instance.
func NewMockTLService(ctrl *gomock.Controller) *MockTLService {
	mock := &MockTLService{ctrl: ctrl}
	mock.recorder = &MockTLServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTLService) EXPECT() *MockTLServiceMockRecorder {
	return m.recorder
}

// CreateTLService mocks base method.
func (m *MockTLService) CreateTLService(arg0 dto.CreateTLReq) (*dto.TLresponse, *errs.CUserError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTLService", arg0)
	ret0, _ := ret[0].(*dto.TLresponse)
	ret1, _ := ret[1].(*errs.CUserError)
	return ret0, ret1
}

// CreateTLService indicates an expected call of CreateTLService.
func (mr *MockTLServiceMockRecorder) CreateTLService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTLService", reflect.TypeOf((*MockTLService)(nil).CreateTLService), arg0)
}
