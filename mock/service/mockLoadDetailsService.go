// Code generated by MockGen. DO NOT EDIT.
// Source: golang/service (interfaces: LoadDetailsService)

// Package Service is a generated GoMock package.
package Service

import (
	dto "golang/dto"
	errs "golang/errs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoadDetailsService is a mock of LoadDetailsService interface.
type MockLoadDetailsService struct {
	ctrl     *gomock.Controller
	recorder *MockLoadDetailsServiceMockRecorder
}

// MockLoadDetailsServiceMockRecorder is the mock recorder for MockLoadDetailsService.
type MockLoadDetailsServiceMockRecorder struct {
	mock *MockLoadDetailsService
}

// NewMockLoadDetailsService creates a new mock instance.
func NewMockLoadDetailsService(ctrl *gomock.Controller) *MockLoadDetailsService {
	mock := &MockLoadDetailsService{ctrl: ctrl}
	mock.recorder = &MockLoadDetailsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoadDetailsService) EXPECT() *MockLoadDetailsServiceMockRecorder {
	return m.recorder
}

// GetLoadDetailsService mocks base method.
func (m *MockLoadDetailsService) GetLoadDetailsService(arg0 dto.GetLoadDetailsReqDTO) (*dto.LoadDetailsResDTO, *errs.AppErrorvalidation) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoadDetailsService", arg0)
	ret0, _ := ret[0].(*dto.LoadDetailsResDTO)
	ret1, _ := ret[1].(*errs.AppErrorvalidation)
	return ret0, ret1
}

// GetLoadDetailsService indicates an expected call of GetLoadDetailsService.
func (mr *MockLoadDetailsServiceMockRecorder) GetLoadDetailsService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoadDetailsService", reflect.TypeOf((*MockLoadDetailsService)(nil).GetLoadDetailsService), arg0)
}
